{"version":3,"sources":["components/Price.js","index.js"],"names":["Price","props","state","error","isLoaded","coinbase","binance","Promise","all","fetch","this","crypto","then","res1","res2","json","setState","data","amount","price","message","buyExchange","coinbasePrice","sellExchange","binancePrice","className","parseFloat","React","Component","PricesList","renderPricesList","Page","ReactDOM","render","document","getElementById"],"mappings":"kQASqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,SAAU,GACVC,QAAS,IANM,E,qDASnB,WAAqB,IAAD,OAClBC,QAAQC,IAAI,CACVC,MACE,sCAAwCC,KAAKT,MAAMU,OAAS,YAE9DF,MACE,sDACEC,KAAKT,MAAMU,OACX,UAGHC,MAAK,YAAmB,IAAD,mBAAhBC,EAAgB,KAAVC,EAAU,KACtB,OAAOP,QAAQC,IAAI,CAACK,EAAKE,OAAQD,EAAKC,YAEvCH,MACC,YAAmB,IAAD,mBAAhBC,EAAgB,KAAVC,EAAU,KAChB,EAAKE,SAAS,CACZZ,UAAU,EACVC,SAAUQ,EAAKI,KAAKC,OACpBZ,QAASQ,EAAKK,WAIlB,SAAChB,GACC,EAAKa,SAAS,CACZZ,UAAU,EACVD,e,oBAMV,WACE,MAA+CO,KAAKR,MAA5CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,QACnC,GAAIH,EACF,OAAO,0CAAaA,EAAMiB,WACrB,GAAKhB,EAEL,CACL,IAAIiB,EAEAC,EADFC,EAAe,GAEfC,EAAe,GAYjB,OAVIlB,EAAUD,GACZgB,EAAc,UACdE,EAAe,WACfC,EAAe,kBAEfH,EAAc,WACdE,EAAe,UACfD,EAAgB,iBAKhB,cADA,CACA,sBACE,qBAAKG,UAAU,mBACf,qBAAKA,UAAU,kBAAf,SAAkCf,KAAKT,MAAMU,SAC7C,qBAAKc,UAAU,kBAAf,SACE,uBAAMA,UAAWH,EAAjB,eAAmCI,WAAWrB,QAEhD,qBAAKoB,UAAU,kBAAf,SACE,uBAAMA,UAAWD,EAAjB,eAAkCE,WAAWpB,QAE/C,qBAAKmB,UAAU,kBAAf,SAAkCJ,IAClC,qBAAKI,UAAU,kBAAf,SAAkCF,OA7BtC,OAAO,iD,GA/CsBI,IAAMC,WCAnCC,G,4KACJ,WACE,OACE,qCACE,cAAC,EAAD,CAAOlB,OAAQ,QACf,cAAC,EAAD,CAAOA,OAAQ,a,oBAKrB,WACE,OACE,qBAAKc,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,+CACA,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,qBAAf,oBACA,qBAAKA,UAAU,qBAAf,sBACA,qBAAKA,UAAU,qBAAf,qBACA,qBAAKA,UAAU,qBAAf,sBACA,qBAAKA,UAAU,qBAAf,uBACA,qBAAKA,UAAU,oBACdf,KAAKoB,4B,GAtBSH,IAAMC,YA6BzBG,E,4JACJ,WACE,OAAO,cAAC,EAAD,Q,GAFQJ,IAAMC,WAMzBI,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.59b9ec31.chunk.js","sourcesContent":["//Nicky Gundersen                                            chainalysis_test\n//Price.js\n//Price.js is a react componenet to be used on index.js, the component makes two api calls to crypto exchanges\n//and determines which has the cheaper coin, passed by props in index.js. it is returned as a table row, consisting\n// of 5 cells\n\nimport React from \"react\";\nimport \"./price.css\";\n\nexport default class Price extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      coinbase: [],\n      binance: [],\n    };\n  }\n  componentDidMount() {\n    Promise.all([\n      fetch(\n        \"https://api.coinbase.com/v2/prices/\" + this.props.crypto + \"-USD/buy\"\n      ),\n      fetch(\n        \"https://api.binance.com/api/v3/ticker/price?symbol=\" +\n          this.props.crypto +\n          \"USDT\"\n      ),\n    ])\n      .then(([res1, res2]) => {\n        return Promise.all([res1.json(), res2.json()]);\n      })\n      .then(\n        ([res1, res2]) => {\n          this.setState({\n            isLoaded: true,\n            coinbase: res1.data.amount,\n            binance: res2.price,\n          });\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  render() {\n    const { error, isLoaded, coinbase, binance } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      var buyExchange,\n        sellExchange = \"\";\n      var coinbasePrice,\n        binancePrice = \"\";\n\n      if (binance < coinbase) {\n        buyExchange = \"Binance\";\n        sellExchange = \"Coinbase\";\n        binancePrice = \"cheaper-price\";\n      } else {\n        buyExchange = \"Coinbase\";\n        sellExchange = \"Binance\";\n        coinbasePrice = \"cheaper-price\";\n      }\n\n      return (\n        //return table row for table in index\n        <>\n          <div className=\"resp-table-row\"></div>\n          <div className=\"table-body-cell\">{this.props.crypto}</div>\n          <div className=\"table-body-cell\">\n            <span className={coinbasePrice}>$ {parseFloat(coinbase)}</span>\n          </div>\n          <div className=\"table-body-cell\">\n            <span className={binancePrice}>$ {parseFloat(binance)}</span>\n          </div>\n          <div className=\"table-body-cell\">{buyExchange}</div>\n          <div className=\"table-body-cell\">{sellExchange}</div>\n        </>\n      );\n    }\n  }\n}\n","//Nicky Gundersen                                            chainalysis_test\n//index.js\n//index.js serves as the homepage, where a PricesList is rendered via usage of the Price component\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Price from \"./components/Price\";\nimport \"./index.css\";\n\nclass PricesList extends React.Component {\n  renderPricesList() {\n    return (\n      <>\n        <Price crypto={\"BTC\"}></Price>\n        <Price crypto={\"ETH\"}></Price>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"resp-table\">\n          <div className=\"resp-header\">Which exchange has a better deal?</div>\n          <div className=\"resp-table-header\"></div>\n          <div className=\"table-header-cells\">Crypto</div>\n          <div className=\"table-header-cells\">Coinbase</div>\n          <div className=\"table-header-cells\">Binance</div>\n          <div className=\"table-header-cells\">Buy Here</div>\n          <div className=\"table-header-cells\">Sell Here</div>\n          <div className=\"resp-table-body\"></div>\n          {this.renderPricesList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Page extends React.Component {\n  render() {\n    return <PricesList></PricesList>;\n  }\n}\n\nReactDOM.render(<Page />, document.getElementById(\"root\"));\n"],"sourceRoot":""}