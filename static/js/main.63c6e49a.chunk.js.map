{"version":3,"sources":["components/Price.js","index.js"],"names":["Price","props","state","error","isLoaded","coinbase","binance","Promise","all","fetch","this","crypto","then","res1","res2","json","setState","data","amount","price","message","coinbasePrice","bestExchange","binancePrice","className","parseFloat","React","Component","PricesList","renderPricesList","Page","ReactDOM","render","document","getElementById"],"mappings":"kQAQqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAO,KACPC,UAAU,EACVC,SAAU,GACVC,QAAS,IANC,E,qDASlB,WAAoB,IAAD,OACfC,QAAQC,IAAI,CACRC,MAAM,sCAAyCC,KAAKT,MAAMU,OAAU,YACpEF,MAAM,sDAAyDC,KAAKT,MAAMU,OAAU,UACnFC,MAAK,YAAmB,IAAD,mBAAhBC,EAAgB,KAAVC,EAAU,KACpB,OAAOP,QAAQC,IAAI,CAACK,EAAKE,OAAQD,EAAKC,YAEzCH,MAAK,YAAmB,IAAD,mBAAhBC,EAAgB,KAAVC,EAAU,KACpB,EAAKE,SAAS,CACVZ,UAAU,EACVC,SAAUQ,EAAKI,KAAKC,OACpBZ,QAASQ,EAAKK,WAItB,SAAChB,GACG,EAAKa,SAAS,CACVZ,UAAU,EACVD,e,oBAMhB,WACI,MAA6CO,KAAKR,MAA3CC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,QAClC,GAAGH,EACC,OAAO,0CAAaA,EAAMiB,WACvB,GAAIhB,EAGP,CAEA,IACIiB,EADAC,EAAe,GACAC,EAAe,GAUlC,OARGjB,EAAUD,GACTiB,EAAe,UACfC,EAAe,kBAEfD,EAAe,WACfD,EAAgB,iBAKjB,cADC,CACD,sBACK,qBAAKG,UAAU,mBACf,qBAAKA,UAAU,kBAAf,SACKd,KAAKT,MAAMU,SAEhB,qBAAKa,UAAU,kBAAf,SACI,uBAAMA,UAAWH,EAAjB,eAAmCI,WAAWpB,QAElD,qBAAKmB,UAAU,kBAAf,SACI,uBAAMA,UAAWD,EAAjB,eAAkCE,WAAWnB,QAEjD,qBAAKkB,UAAU,kBAAf,SACKF,OA7Bb,OAAO,iD,GAvCgBI,IAAMC,WCFnCC,G,4KACJ,WACE,OACE,qCACA,cAAC,EAAD,CACAjB,OAAQ,QAER,cAAC,EAAD,CACEA,OAAQ,a,oBAMd,WACC,OACE,qBAAKa,UAAU,OAAf,SACC,sBAAKA,UAAU,aAAf,UACF,qBAAKA,UAAU,cAAf,+CACA,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,qBAAf,oBACA,qBAAKA,UAAU,qBAAf,sBACA,qBAAKA,UAAU,qBAAf,qBACA,qBAAKA,UAAU,qBAAf,8BACA,qBAAKA,UAAU,oBACdd,KAAKmB,4B,GAzBeH,IAAMC,YAkCzBG,E,4JACJ,WACE,OACG,cAAC,EAAD,Q,GAHYJ,IAAMC,WASzBI,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.63c6e49a.chunk.js","sourcesContent":["//Nicky Gundersen                       chainalysis_test\n//Price.js\n//Price.js is a react componenet to be used on index.js, the component makes two api calls to crypto exchanges\n//and determines which has the cheaper coin, passed by props in index.js. \n\nimport React from \"react\";\nimport './price.css';\n\nexport default class Price extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            coinbase: [],\n            binance: [],\n        };\n    }\n    componentDidMount(){\n        Promise.all([\n            fetch(\"https://api.coinbase.com/v2/prices/\" + (this.props.crypto) + \"-USD/buy\"),\n            fetch(\"https://api.binance.com/api/v3/ticker/price?symbol=\" + (this.props.crypto) + \"USDT\")])\n            .then(([res1, res2]) => {\n                return Promise.all([res1.json(), res2.json()])\n            })\n            .then(([res1, res2]) => {\n                this.setState({\n                    isLoaded: true,\n                    coinbase: res1.data.amount,\n                    binance: res2.price\n                });\n            },\n            \n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        )\n    }\n\n    render(){\n        const {error, isLoaded, coinbase, binance} = this.state;\n        if(error) {\n            return <div>Error: {error.message}</div>;\n        } else if(!isLoaded){\n            return <div>Loading...</div>\n        }\n        else{\n\n            var bestExchange = '';\n            var coinbasePrice, binancePrice = '';\n\n            if(binance < coinbase){\n                bestExchange = \"Binance\";\n                binancePrice = \"cheaper-price\";\n            }else{\n                bestExchange = \"Coinbase\"\n                coinbasePrice = \"cheaper-price\"\n            }\n\n            return(\n                //return table row for table in index\n               <>\n                    <div className=\"resp-table-row\"></div>\n                    <div className=\"table-body-cell\">\n                        {this.props.crypto}\n                    </div>\n                    <div className=\"table-body-cell\">\n                        <span className={coinbasePrice}>$ {parseFloat(coinbase)}</span>\n                    </div>\n                    <div className=\"table-body-cell\">\n                        <span className={binancePrice}>$ {parseFloat(binance)}</span>\n                    </div>\n                    <div className=\"table-body-cell\">\n                        {bestExchange}\n                    </div>\n                </>\n  \n            );\n        }\n    }\n    \n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Price from './components/Price';\nimport './index.css';\n\n\nclass PricesList extends React.Component{\n  renderPricesList(){\n    return(\n      <>\n      <Price \n      crypto={\"BTC\"}>\n      </Price>\n      <Price\n        crypto={\"ETH\"}\n      ></Price>\n      </>\n    )\n  }\n  \n  render(){\n   return(\n     <div className=\"main\">\n      <div className=\"resp-table\">\n    <div className=\"resp-header\">Which exchange has a better deal?</div>\n    <div className=\"resp-table-header\"></div>\n    <div className=\"table-header-cells\">Crypto</div>\n    <div className=\"table-header-cells\">Coinbase</div>\n    <div className=\"table-header-cells\">Binance</div>\n    <div className=\"table-header-cells\">Cheaper Exchange</div>\n    <div className=\"resp-table-body\"></div>\n    {this.renderPricesList()}\n    </div>\n    </div>\n    \n   )\n  }\n\n}\n\nclass Page extends React.Component{\n  render(){\n    return(\n       <PricesList></PricesList>\n    )\n  }\n\n}\n\nReactDOM.render(<Page />, document.getElementById(\"root\"));"],"sourceRoot":""}